{"version":3,"sources":["components/Cards/Cards.jsx","components/Chart/Chart.jsx","api/index.js","App.js","index.js"],"names":["Cards","data","confirmed","recovered","deaths","lastUpdate","today","Date","getFullYear","getMonth","getDate","className","start","end","value","duration","separator","Chart","barChart","labels","datasets","label","backgroundColor","options","legend","display","title","text","dataFetch","a","axios","get","console","log","App","state","this","setState","src","alt","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAuCeA,EAnCD,SAAC,GAAwD,IAAD,IAAtDC,KAAOC,EAA+C,EAA/CA,UAAWC,EAAoC,EAApCA,UAAWC,EAAyB,EAAzBA,OAAQC,EAAiB,EAAjBA,WACjD,IAAIH,EACA,MAAO,aAEX,IAAMI,EAAK,UACR,IAAIC,KAAKF,GAAYG,cADb,YAC8B,IAAID,KAAKF,GAAYI,WAAW,EAAI,GAApC,WAA6C,IAAIF,KAAKF,GAAYI,WAAW,GAA7E,UAAsF,IAAIF,KAAKF,GAAYI,WAAW,GADpJ,YAC2J,IAAIF,KAAKF,GAAYK,UAAY,GAAjC,WAA0C,IAAIH,KAAKF,GAAYK,WAA/D,UAAgF,IAAIH,KAAKF,GAAYK,YAE3Q,OACI,yBAAKC,UAAU,WACX,yBAAKA,UAAU,QACX,yCACA,4BAAI,kBAAC,IAAD,CAASC,MAAO,EAAGC,IAAKX,EAAUY,MAAOC,SAAU,EAAGC,UAAW,OAErE,4CACA,4BAAKV,IAET,yBAAKK,UAAU,QACX,0CACA,4BACA,kBAAC,IAAD,CAASC,MAAO,EAAGC,IAAKV,EAAUW,MAAOC,SAAU,EAAGC,UAAW,OAEjE,4CACA,4BAAKV,IAET,yBAAKK,UAAU,QACX,uCACA,4BACA,kBAAC,IAAD,CAASC,MAAO,EAAGC,IAAKT,EAAOU,MAAOC,SAAU,EAAGC,UAAW,OAE9D,4CACA,4BAAKV,M,QCDNW,EA9BD,SAAC,GAA4C,IAAD,IAA1ChB,KAAOC,EAAmC,EAAnCA,UAAWC,EAAwB,EAAxBA,UAAWC,EAAa,EAAbA,OAC3C,IAAIF,EACF,MAAO,GAET,IAAMgB,EACJhB,EACE,kBAAC,IAAD,CACED,KAAM,CACJkB,OAAQ,CAAC,WAAY,YAAa,UAClCC,SAAU,CACR,CACEC,MAAO,SACPC,gBAAiB,CAAC,uBAAwB,uBAAwB,wBAClErB,KAAM,CAACC,EAAUY,MAAOX,EAAUW,MAAOV,EAAOU,UAItDS,QAAS,CACPC,OAAQ,CAAEC,SAAS,GACnBC,MAAO,CAAED,SAAS,EAAME,KAAK,+BAG/B,KAEN,OACI,6BACGT,I,iBC1BIU,EAAS,uCAAG,sCAAAC,EAAA,+EAEgDC,IAAMC,IAHnE,oDACa,2BAEV9B,KAAOC,EAFG,EAEHA,UAAWC,EAFR,EAEQA,UAAWC,EAFnB,EAEmBA,OAAQC,EAF3B,EAE2BA,WAF3B,kBAGV,CAACH,YAAWC,YAAWC,SAAQC,eAHrB,kCAMjB2B,QAAQC,IAAR,MANiB,0DAAH,qDCuBPC,E,4MApBbC,MAAQ,CACNlC,KAAM,I,kMAGa2B,I,cAAb3B,E,OACNmC,KAAKC,SAAS,CAACpC,KAAMA,I,kBACdA,G,qIAEC,IACAA,EAASmC,KAAKD,MAAdlC,KACR,OACE,yBAAKU,UAAU,aACb,kBAAC,EAAD,CAAOV,KAAMA,IACb,kBAAC,EAAD,CAAOA,KAAMA,IACb,yBAAKqC,IAAI,6EAA6EC,IAAI,qC,GAfhFC,IAAMC,WCAxBC,IAASC,OACL,kBAAC,IAAMC,WAAP,KACA,kBAAC,EAAD,OACqBC,SAASC,eAAe,U","file":"static/js/main.589facc0.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Cards.css';\r\nimport CountUp from 'react-countup';\r\n\r\nconst Cards = ({data: {confirmed, recovered, deaths, lastUpdate}}) => {\r\n    if(!confirmed) {\r\n        return 'Loading...';\r\n    }\r\n    const today = (\r\n    `${new Date(lastUpdate).getFullYear()}-${new Date(lastUpdate).getMonth()+1 < 10 ? `0${new Date(lastUpdate).getMonth()+1}` : `${new Date(lastUpdate).getMonth()+1}`}-${new Date(lastUpdate).getDate() < 10 ? `0${new Date(lastUpdate).getDate()}` : `${new Date(lastUpdate).getDate()}`}`)\r\n    \r\n    return (\r\n        <div className=\"wrapper\">\r\n            <div className=\"card\">\r\n                <h2>Infected:</h2>\r\n                <h1><CountUp start={0} end={confirmed.value} duration={1} separator={\",\"} />\r\n                    </h1>\r\n                <h2>Last Update:</h2>\r\n                <h2>{today}</h2>\r\n            </div>\r\n            <div className=\"card\">\r\n                <h2>Recovered:</h2>\r\n                <h1>\r\n                <CountUp start={0} end={recovered.value} duration={1} separator={\",\"} />\r\n                </h1>\r\n                <h2>Last Update:</h2>\r\n                <h2>{today}</h2>\r\n            </div>\r\n            <div className=\"card\">\r\n                <h2>Deaths:</h2>\r\n                <h1>\r\n                <CountUp start={0} end={deaths.value} duration={1} separator={\",\"}/>\r\n                </h1>\r\n                <h2>Last Update:</h2>\r\n                <h2>{today}</h2>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Cards;\r\n","import React from 'react'\r\nimport { Bar } from 'react-chartjs-2'\r\n\r\nconst Chart = ({data: {confirmed, recovered, deaths}}) => {\r\n  if(!confirmed){\r\n    return ''\r\n  }\r\n  const barChart = (\r\n    confirmed ? (\r\n      <Bar\r\n        data={{\r\n          labels: ['Infected', 'Recovered', 'Deaths'],\r\n          datasets: [\r\n            {\r\n              label: 'People',\r\n              backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\r\n              data: [confirmed.value, recovered.value, deaths.value],\r\n            },\r\n          ],\r\n        }}\r\n        options={{\r\n          legend: { display: false },\r\n          title: { display: true, text: `Current state in Hungary` },\r\n        }}\r\n      />\r\n    ) : null\r\n  );\r\n  return (\r\n      <div>\r\n        {barChart}\r\n      </div>\r\n  )\r\n}\r\nexport default Chart;\r\n","import axios from 'axios'\r\n//const datum = `${new Date().getMonth() + 1}-${new Date().getDate()-1}-${new Date().getFullYear()}`\r\nconst url = 'https://covid19.mathdro.id/api/countries/Hungary'\r\nexport const dataFetch = async () => {\r\n    try{\r\n        const {data: {confirmed, recovered, deaths, lastUpdate}} = await axios.get(url)\r\n        return {confirmed, recovered, deaths, lastUpdate}\r\n    }\r\n    catch(e) {\r\n        console.log(e)\r\n    }\r\n}","import React from 'react';\nimport './App.css';\nimport { Cards, Chart } from './components'\nimport { dataFetch } from './api'\n\nclass App extends React.Component {\n  state = {\n    data: {},\n  }\n  async componentDidMount() {\n    const data = await dataFetch();\n    this.setState({data: data})\n    return data\n  }\n  render() {\n    const { data } = this.state\n    return (\n      <div className=\"container\">\n        <Cards data={data}/>\n        <Chart data={data}/>\n        <img src=\"https://szeged365.hu/wp-content/uploads/2020/04/BeFunky-collage-scaled.jpg\" alt=\"legysziTöltsdBeAKépet\"></img>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n    <App />\n    </React.StrictMode>, document.getElementById('root')\n);\n"],"sourceRoot":""}