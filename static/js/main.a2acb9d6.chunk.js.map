{"version":3,"sources":["components/Cards/Cards.jsx","components/Chart/Chart.jsx","api/index.js","components/CountryPick/CountryPick.jsx","App.js","index.js"],"names":["Cards","data","confirmed","recovered","deaths","lastUpdate","today","Date","getFullYear","getMonth","getDate","className","start","end","value","duration","separator","Chart","country","barChart","labels","datasets","label","backgroundColor","options","legend","display","title","text","url","dataFetch","a","changeAble","axios","get","console","log","fetchCountries","countries","map","name","CountryPick","handleCountryChange","useState","setCountries","useEffect","fetchAPI","onChange","e","target","i","key","katt","window","open","App","state","countryData","setState","this","onClick","src","alt","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a2acb9d6.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Cards.css';\r\nimport CountUp from 'react-countup';\r\n\r\nconst Cards = ({data: {confirmed, recovered, deaths, lastUpdate}}) => {\r\n    if(!confirmed) {\r\n        return 'Loading...';\r\n    }\r\n    const today = (\r\n    `${new Date(lastUpdate).getFullYear()}-${new Date(lastUpdate).getMonth()+1 < 10 ? `0${new Date(lastUpdate).getMonth()+1}` : `${new Date(lastUpdate).getMonth()+1}`}-${new Date(lastUpdate).getDate() < 10 ? `0${new Date(lastUpdate).getDate()}` : `${new Date(lastUpdate).getDate()}`}`)\r\n    \r\n    return (\r\n        <div className=\"wrapper\">\r\n            <div className=\"card\">\r\n                <h2>Infected:</h2>\r\n                <h1><CountUp start={0} end={confirmed.value} duration={1} separator={\",\"} />\r\n                    </h1>\r\n                <h2>Last Update:</h2>\r\n                <h2>{today}</h2>\r\n            </div>\r\n            <div className=\"card\">\r\n                <h2>Recovered:</h2>\r\n                <h1>\r\n                <CountUp start={0} end={recovered.value} duration={1} separator={\",\"} />\r\n                </h1>\r\n                <h2>Last Update:</h2>\r\n                <h2>{today}</h2>\r\n            </div>\r\n            <div className=\"card\">\r\n                <h2>Deaths:</h2>\r\n                <h1>\r\n                <CountUp start={0} end={deaths.value} duration={1} separator={\",\"}/>\r\n                </h1>\r\n                <h2>Last Update:</h2>\r\n                <h2>{today}</h2>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Cards;\r\n","import React from 'react'\r\nimport { Bar } from 'react-chartjs-2'\r\n\r\nconst Chart = ({data: {confirmed, recovered, deaths}, country}) => {\r\n  if(!confirmed){\r\n    return ''\r\n  }\r\n  const barChart = (\r\n    confirmed ? (\r\n      <Bar\r\n        data={{\r\n          labels: ['Infected', 'Recovered', 'Deaths'],\r\n          datasets: [\r\n            {\r\n              label: 'People',\r\n              backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\r\n              data: [confirmed.value, recovered.value, deaths.value],\r\n            },\r\n          ],\r\n        }}\r\n        options={{\r\n          legend: { display: false },\r\n          title: { display: true, text: `Current state in ${country}` },\r\n        }}\r\n      />\r\n    ) : null\r\n  );\r\n  return (\r\n      <div>\r\n        {barChart}\r\n      </div>\r\n  )\r\n}\r\nexport default Chart;\r\n","import axios from 'axios'\r\n//const datum = `${new Date().getMonth() + 1}-${new Date().getDate()-1}-${new Date().getFullYear()}`\r\nconst url = 'https://covid19.mathdro.id/api/'\r\n\r\nexport const dataFetch = async (country) => {\r\n    if (country) {\r\n        const changeAble = `${url}countries/${country}`\r\n        const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(`${changeAble}`)\r\n        return {confirmed, recovered, deaths, lastUpdate}\r\n    }\r\n\r\n    try{\r\n        const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(`${url}countries/hun`)\r\n        return {confirmed, recovered, deaths, lastUpdate}\r\n    }\r\n    catch(e) {\r\n        console.log(e)\r\n    }\r\n}\r\nexport const fetchCountries = async () =>{\r\n    try {\r\n        const { data: { countries } } = await axios.get(`${url}countries`);\r\n        const a = countries.map(country => country.name)\r\n        return a\r\n    }\r\n    catch(e) {\r\n        console.log(e)\r\n    }\r\n}","import React, {useState, useEffect} from 'react'\r\nimport { fetchCountries } from '../../api'\r\nimport './CountryPick.css'\r\n\r\nconst CountryPick = ( { handleCountryChange }) => {\r\n    const [countries, setCountries] = useState([])\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n          setCountries(await fetchCountries());\r\n        };\r\n    \r\n        fetchAPI();\r\n      }, []);\r\n    if(!countries) {\r\n        return 'Loading...'\r\n    }\r\n    return (\r\n        <div>\r\n            <select className=\"dropDown\" onChange={(e) => handleCountryChange(e.target.value)}>\r\n                <option className=\"text-change\" value=\"\">Hungary</option>\r\n                {countries.map((country, i) => <option className=\"text-change\" key={i} value={country}>{country}</option>)}\r\n           </select>\r\n        </div>\r\n    )\r\n}\r\nexport default CountryPick;\r\n","import React from 'react';\nimport './App.css';\nimport { Cards, Chart, CountryPick } from './components'\nimport { dataFetch } from './api'\nconst katt = () => {\n  window.open(\"https://www.youtube.com/channel/UCmUSwFUpkrdlR2KSxFJomww\")\n}\n\nclass App extends React.Component {\n  state = {\n    data: {},\n    country: 'Hungary',\n  }\n  async componentDidMount() {\n    const data = await dataFetch();\n    this.setState({data: data})\n    return data\n  }\n  handleCountryChange = async (country) => {\n    const countryData = await dataFetch(country)\n    this.setState({data: countryData, country: country})\n  }\n  render() {\n    const { data, country } = this.state\n    return (\n      <div className=\"container\">\n        <CountryPick handleCountryChange={this.handleCountryChange} />\n        <Cards data={data}/>\n        <Chart data={data} country={country}/>\n        <img onClick={katt} src=\"https://szeged365.hu/wp-content/uploads/2020/04/BeFunky-collage-scaled.jpg\" alt=\"legysziTöltsdBeAKépet\"></img>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n    <App />\n    </React.StrictMode>, document.getElementById('root')\n);\n"],"sourceRoot":""}