{"version":3,"sources":["components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPick/CountryPick.jsx","App.js","index.js"],"names":["Cards","data","confirmed","recovered","deaths","lastUpdate","today","Date","getFullYear","getMonth","getDate","className","start","end","value","duration","separator","url","dataFetch","country","a","changeAble","axios","get","console","log","fetchCountries","countries","map","name","fetchOneWeek","date","reportDate","total","Chart","useState","dailyData","setDailyData","useEffect","fetchMyAPI","barChart","labels","datasets","label","backgroundColor","options","legend","display","title","text","line","borderColor","fill","CountryPick","handleCountryChange","setCountries","fetchAPI","onChange","e","target","i","key","katt","window","open","App","state","countryData","setState","this","onClick","src","alt","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e1efd8a7.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Cards.css';\r\nimport CountUp from 'react-countup';\r\n\r\nconst Cards = ({data: {confirmed, recovered, deaths, lastUpdate}}) => {\r\n    if(!confirmed) {\r\n        return 'Loading...';\r\n    }\r\n    const today = (\r\n    `${new Date(lastUpdate).getFullYear()}-${new Date(lastUpdate).getMonth()+1 < 10 ? `0${new Date(lastUpdate).getMonth()+1}` : `${new Date(lastUpdate).getMonth()+1}`}-${new Date(lastUpdate).getDate() < 10 ? `0${new Date(lastUpdate).getDate()}` : `${new Date(lastUpdate).getDate()}`}`)\r\n    \r\n    return (\r\n        <div className=\"wrapper\">\r\n            <div className=\"card card1\">\r\n                <h2>Infected:</h2>\r\n                <h1><CountUp start={0} end={confirmed.value} duration={1} separator={\",\"} />\r\n                    </h1>\r\n                <h2>Last Update:</h2>\r\n                <h2>{today}</h2>\r\n            </div>\r\n            <div className=\"card card2\">\r\n                <h2>Recovered:</h2>\r\n                <h1>\r\n                <CountUp start={0} end={recovered.value} duration={1} separator={\",\"} />\r\n                </h1>\r\n                <h2>Last Update:</h2>\r\n                <h2>{today}</h2>\r\n            </div>\r\n            <div className=\"card card3\">\r\n                <h2>Deaths:</h2>\r\n                <h1>\r\n                <CountUp start={0} end={deaths.value} duration={1} separator={\",\"}/>\r\n                </h1>\r\n                <h2>Last Update:</h2>\r\n                <h2>{today}</h2>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Cards;\r\n","import axios from 'axios'\r\nconst datum = `${new Date().getMonth() + 1}-${new Date().getDate()-1}-${new Date().getFullYear()}`\r\nconst url = 'https://covid19.mathdro.id/api/'\r\n\r\nexport const dataFetch = async (country) => {\r\n    if (country) {\r\n        const changeAble = `${url}countries/${country}`\r\n        const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(`${changeAble}`)\r\n        return {confirmed, recovered, deaths, lastUpdate}\r\n    }\r\n\r\n    try{\r\n        const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(`${url}countries/hun`)\r\n        return {confirmed, recovered, deaths, lastUpdate}\r\n    }\r\n    catch(e) {\r\n        console.log(e)\r\n    }\r\n}\r\nexport const fetchCountries = async () =>{\r\n    try {\r\n        const { data: { countries } } = await axios.get(`${url}countries`);\r\n        const a = countries.map(country => country.name)\r\n        return a\r\n    }\r\n    catch(e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport const fetchOneWeek = async () => {\r\n    try {\r\n        const { data } = await axios.get(`${url}daily`)\r\n        return data.map(({ confirmed, deaths, reportDate: date }) => ({ confirmed: confirmed.total, deaths: deaths.total, date }));\r\n    }\r\n    catch(e)\r\n    {console.log(e)}\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { Bar, Line } from 'react-chartjs-2'\r\nimport { fetchOneWeek } from '../../api'\r\n\r\nconst Chart = ({data: {confirmed, recovered, deaths}, country}) => {\r\n  \r\n  const [dailyData, setDailyData] = useState({})\r\n  useEffect(() => {\r\n    const fetchMyAPI = async () => {\r\n      const data = await fetchOneWeek();\r\n\r\n      setDailyData(data);\r\n    };\r\n\r\n    fetchMyAPI();\r\n  }, []);\r\n  if(!confirmed){\r\n    return ''\r\n  }\r\n  const barChart = (\r\n    confirmed ? (\r\n      <Bar\r\n        data={{\r\n          labels: ['Infected', 'Recovered', 'Deaths'],\r\n          datasets: [\r\n            {\r\n              label: 'People',\r\n              backgroundColor: ['#DD1155', 'rgba(0, 255, 0, 0.65)', '#0C0C0C'],\r\n              data: [confirmed.value, recovered.value, deaths.value],\r\n            },\r\n          ],\r\n        }}\r\n        options={{\r\n          legend: { display: false },\r\n          title: { display: true, text: `Current state in ${country}` },\r\n        }}\r\n      />\r\n    ) : null\r\n  );\r\n  const line = (\r\n    dailyData[0] ? (\r\n      <Line\r\n        data={{\r\n          labels: dailyData.map(({ date }) => date),\r\n          datasets: [{\r\n            data: dailyData.map((data) => data.confirmed),\r\n            label: 'Infected',\r\n            borderColor: '#DD1155',\r\n            fill: true,\r\n          }, {\r\n            data: dailyData.map((data) => data.deaths),\r\n            label: 'Deaths',\r\n            borderColor: '#0C0C0C',\r\n            fill: true,\r\n          },\r\n          ],\r\n        }}\r\n      />\r\n    ) : null\r\n  );\r\n  return (\r\n      <div>\r\n        {barChart}\r\n        {line}\r\n      </div>\r\n  )\r\n}\r\nexport default Chart;\r\n","import React, {useState, useEffect} from 'react'\r\nimport { fetchCountries } from '../../api'\r\nimport './CountryPick.css'\r\n\r\nconst CountryPick = ( { handleCountryChange }) => {\r\n    const [countries, setCountries] = useState([])\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n          setCountries(await fetchCountries());\r\n        };\r\n    \r\n        fetchAPI();\r\n      }, []);\r\n    if(!countries) {\r\n        return 'Loading...'\r\n    }\r\n    return (\r\n        <div>\r\n            <select className=\"dropDown\" onChange={(e) => handleCountryChange(e.target.value)}>\r\n                <option className=\"text-change\" value=\"\">Hungary</option>\r\n                {countries.map((country, i) => <option className=\"text-change\" key={i} value={country}>{country}</option>)}\r\n           </select>\r\n        </div>\r\n    )\r\n}\r\nexport default CountryPick;\r\n","import React from 'react';\nimport './App.css';\nimport { Cards, Chart, CountryPick } from './components'\nimport { dataFetch } from './api'\nconst katt = () => {\n  window.open(\"https://www.youtube.com/channel/UCmUSwFUpkrdlR2KSxFJomww\")\n}\n\nclass App extends React.Component {\n  state = {\n    data: {},\n    country: 'Hungary',\n  }\n  async componentDidMount() {\n    const data = await dataFetch();\n    this.setState({data: data})\n    return data\n  }\n  handleCountryChange = async (country) => {\n    const countryData = await dataFetch(country)\n    this.setState({data: countryData, country: country})\n  }\n  render() {\n    const { data, country } = this.state\n    return (\n      <div className=\"container\">\n        <CountryPick handleCountryChange={this.handleCountryChange} />\n        <Cards data={data}/>\n        <Chart data={data} country={country}/>\n        <img onClick={katt} src=\"https://szeged365.hu/wp-content/uploads/2020/04/BeFunky-collage-scaled.jpg\" alt=\"legysziTöltsdBeAKépet\"></img>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n    <App />\n    </React.StrictMode>, document.getElementById('root')\n);\n"],"sourceRoot":""}